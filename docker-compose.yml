version: '2'
services:
  db:
    image: postgres:15.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - $PWD/database/data:/var/lib/postgresql/data
      - $PWD/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  api:
    build: backend
    depends_on:
      - db
    restart: always
    environment:
      - SENTRY_DSN=$SENTRY_DSN
      - EXTERNAL_URL=$EXTERNAL_URL
      - ADMIN_EMAIL=$ADMIN_EMAIL
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - TOKEN_JSON=$TOKEN_JSON
      - CREDENTIALS_JSON=$CREDENTIALS_JSON
  export:
    build: export
    depends_on:
      - db
      - api
    restart: always
    environment:
      - ADMIN_EMAIL=$ADMIN_EMAIL
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - CLIENT_SECRET_JSON=$CLIENT_SECRET_JSON
    volumes:
      - $PWD/export/main.py:/app/main.py
      - $PWD/export/utils.py:/app/utils.py
      - $PWD/export/client_secret.json:/app/client_sercret.json
  frontend:
    build: frontend
    depends_on:
      - api
    restart: always
    ports:
      - "0.0.0.0:40080:80"

